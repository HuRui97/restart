int main()
{
	unsigned char a = 200;
	//1100 1000
	unsigned char b = 100;
	//0110 0100
	unsigned char c = 0;
	c = a + b;//整型提升
	//10010 1100->0010 1100
	printf("%d,%d", a + b, c);
	//300,44
	return 0;
}


int main()
{
	unsigned int a = 0x1234;
	//0x 00 00 12 34
	unsigned char b = *(unsigned char*)&a;

	return 0;
}


int main()
{
	char a[1000] = { 0 };
	int i = 0;
	for (i = 0; i < 1000; i++)
	{
		a[i] = -1 - i;
	}
	//char取值范围-128--127；
	//-1补码为全1，-->-2-->…->-128(10000000)-->127(01111111)-->…->0
	printf("%d\n", strlen(a));
	return 0;
}



void print(int arr[10][10])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < 10; i++)
	{
		for (j = 0; j <=i; j++)
		{
			printf("%-3d ", arr[i][j]);
		}
		printf("\n");
	}
}


int main()//杨辉三角
{
	int arr[10][10] = { 0 };
	int i = 0;
	int j = 0;
	for (i = 0; i < 10; i++)
	{
		for (j = 0; j < 10; j++)
		{
			if (j == 0)
			{
				arr[i][j] = 1;
			}
			if (i == j)
			{
				arr[i][j] = 1;
			}
			if (i >= 2 && j >= 1)
			{
				arr[i][j] = arr[i - 1][j] + arr[i - 1][j - 1];
			}
		}
	}

	print(arr);
	return 0;
}